#!/bin/sh
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Apache control script designed to allow an easy command line interface
# to controlling Apache.  Written by Marc Slemko, 1997/08/23
# 
# When multiple arguments are given, only the error from the _last_
# one is reported.  Run "apachectl help" for usage info
#
ARGV="$@"
#
# |||||||||||||||||||| START CONFIGURATION SECTION  ||||||||||||||||||||
# --------------------                              --------------------
# 
# the path to your httpd binary, including options if necessary
HTTPD='/usr/local/apache/bin/httpd'
CFG_DIR='/etc/httpd'
#
# pick up any necessary environment variables
if test -f $CFG_DIR/envvars; then
  . $CFG_DIR/envvars
fi
# a list of Apache configuration files to enumerate over
#CONFIGS="httpd-perl.conf httpd-php.conf httpd-java.conf"
CONFIGS="httpd-perl.conf httpd-php.conf httpd-java.conf"

# Set this variable to a command that increases the maximum
# number of file descriptors allowed per child process. This is
# critical for configurations that use many file descriptors,
# such as mass vhosting, or a multithreaded server.
ULIMIT_MAX_FILES="ulimit -S -n $(ulimit -H -n)"
# --------------------                              --------------------
# ||||||||||||||||||||   END CONFIGURATION SECTION  ||||||||||||||||||||

# Set the maximum number of file descriptors allowed per child process.
if [ "x$ULIMIT_MAX_FILES" != "x" ] ; then
    $ULIMIT_MAX_FILES
fi

ERROR=0
if [ "x$ARGV" = "x" ] ; then 
    ARGV="-h"
fi

case $ARGV in
start|stop|restart|graceful|graceful-stop)
    for CFG in $(echo $CONFIGS); do
        # -k is 'kommand'
        echo -n "executing 'httpd'; "
        echo -n "command: '$ARGV'; "
        echo "config file: '$CFG'"
        $HTTPD -f $CFG_DIR/$CFG -k $ARGV
        ERROR=$?
        if [ $ERROR -gt 0 ]; then
            echo "ERROR: config $CFG exited with error code $ERROR"
            exit $ERROR
        fi
    done
    ;;
configtest)
    for CFG in $(echo $CONFIGS); do
        # -k is 'kommand'
        echo -n "executing 'httpd -t'; "
        echo "config file: '$CFG'"
        $HTTPD -f $CFG_DIR/$CFG -t
        ERROR=$?
        if [ $ERROR -gt 0 ]; then
            echo "ERROR: config $CFG exited with error code $ERROR"
            exit $ERROR
        fi
    done
    ;;
status|quickstatus)
    # grab the running HTTP processes
     ps auxw | grep -E "httpd|USER" | grep -E "root|USER" | grep -v grep \
        | awk '{print $1, $2, $11, $12, $13, $14, $15;}'
    ;;
*)
    $HTTPD $ARGV
    ERROR=$?
esac

exit $ERROR

# vim: filetype=sh
