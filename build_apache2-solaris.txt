Pre-install of all software:
----------------------------
set a PREFIX:

export PREFIX=/export/home/apache

OpenSSL (http://www.openssl.org/source/)
----------------------------------------
./config --prefix=$PREFIX
make
sudo make install

PostgreSQL 7.3.x (http://www.postgresql.org/mirrors-ftp.html)
----------------
PostgreSQL REQUIRES GNU make.  If you don't have it, you'll need to go get it
from Sunfreeware.com.  Also, you may need to reset some of the kernel's memory
parameters.  <http://postgresql.readysetnet.com/devel-corner/docs/admin/kernel-r
esources.html#SYSVIPC> will give you more dirt.

adduser postgres (add the user to the system)

./configure --prefix=/export/home/postgres --with-openssl=/usr/local/ssl \
--with-includes=/usr/local/includes 

make
make install

adduser postgres (add the user to the system)
chown postgres /export/home/postgres/data
su - postgres
/export/home/postgres/bin/initdb -D /export/home/postgres/data

MySQL 3.23.xx (http://www.mysql.com/downloads/)
-----------------------------------------------
Use the following lines to configure/compile MySQL:

CC=gcc CFLAGS="-O3 -fno-omit-frame-pointer -mcpu=v8 -Wa,-xarch=v8plusa" \
CXX=gcc \ 
CXXFLAGS="-O3 -fno-omit-frame-pointer -felide-constructors -fno-exceptions \
-fno-rtti -mcpu=v8 -Wa,-xarch=v8plusa" \
./configure --prefix=/export/home/mysql \
--with-extra-charsets=complex --enable-thread-safe-client\
--enable-local-infile --enable-assembler --with-named-z-libs=no\
--with-named-curses-libs=-lcurses --disable-shared 

make
make install

Apache 2.0.xx
-------------
unpack the tarball, cd into the source directory.  To get a full listing of
compile options you can set in Apache, use './configure --help'

./configure \ 
--prefix=$PREFIX \
--enable-auth-dbm \
--enable-example \
--enable-usertrack \
--enable-ssl \
--with-ssl=$PREFIX \
--enable-static-htpasswd \
--enable-static-ab \
--enable-mods-shared=all \
--with-mpm=worker

For Apache 2.0.44 on Solaris, if you compile using GCC, some of the Apache
modules don't get linked correctly against libgcc.a.  See the below URL's for
more info and solutions:

http://perl.apache.org/docs/1.0/guide/troubleshooting.html#symbol___floatdisf__referenced_symbol_not_found
http://www.riverside.org/archive/html/new-httpd/2003-01/msg00051.html

For mod_ssl, chances are Apache won't link to the correct archived library
(libssl.a), and you'll have to re-link the file to create a new shared library.
(maybe go back in and rebuild the mod_ssl library with all of the lo files in
the ssl directory)
